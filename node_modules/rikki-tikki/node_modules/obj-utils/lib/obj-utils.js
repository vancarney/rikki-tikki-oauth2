// Generated by CoffeeScript 1.7.1
var Fun, Obj, global;

global = typeof exports !== "undefined" && exports !== null ? exports : window;

'use strict';

Fun = require('fun-utils');

global.Obj = Obj = {};

Obj.getTypeOf = function(obj) {
  return Object.prototype.toString.call(obj).slice(8, -1);
};

Obj.isOfType = function(value, kind) {
  return (this.getTypeOf(value)) === (Fun.getFunctionName(kind)) || value instanceof kind;
};

Obj.objectToQuery = function(object) {
  var i, keys, pairs, _i, _ref;
  if (object == null) {
    object = {};
  }
  pairs = [];
  keys = Object.keys(object);
  for (i = _i = 0, _ref = keys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
    pairs[i] = [keys[i], object[keys[i]]];
  }
  return (pairs.map((function(_this) {
    return function(v, k) {
      return v.join('=');
    };
  })(this))).join('&');
};

Obj.queryToObject = function(string) {
  var o;
  o = {};
  decodeURIComponent(string).replace('?', '').split('&').forEach((function(_this) {
    return function(v, k) {
      var p;
      if ((p = v.split('=')).length === 2) {
        return o[p[0]] = p[1];
      }
    };
  })(this));
  return o;
};
