{_}             = require 'underscore'
RikkiTikkiAPI   = module.parent.exports
module.exports = {}
module.exports.RikkiTikkiAPI = RikkiTikkiAPI
Util            = RikkiTikkiAPI.Util
Capabilities    = Util.getCapabilities()
RenderableSchema  = require './RenderableSchema'
class APISchema extends RenderableSchema
  constructor:->
    @wrap_schema    = RikkiTikkiAPI.getOptions().get 'wrap_schema_exports'
    @model_export   = "module.exports = #{if Capabilities.mongooseLoaded() then 'mongoose' else 'API'}.model('<%=name%>', <%=name%>);"
    @schema_export  = "module.exports.<%=name%> = <%=name%>;"
    @__template = """
    /*
     * <%=name%>.js
     * Schema Generated by RikkiTikki
     * Add custom Schema Validators, Types and Methods below
     */
    var API = require('<%=api_path%>');
    #{if Capabilities.mongooseLoaded() then "var mongoose = require('mongoose');" else ""}
    var <%=name%> = new #{if Capabilities.mongooseLoaded() then 'mongoose.Schema' else 'API.Schema'}(
      API.extend(API.getSchemaTree('<%=name%>'),
      {
        // place custom Schema Type overrides here
      })
    );
    
    /*
     * Virtual Getters/Setters
     */
    <%=name%>.virtuals = {
      
    };
    
    /*
     * Static Methods
     */
    <%=name%>.statics = {
      
    };
    
    /*
     * Custom Schema Validators
     */
    <%=name%>.validators = {
      
    };
    
    #{if @wrap_schema then @model_export else @schema_export}
    """
    APISchema.__super__.constructor.apply @, arguments
module.exports = APISchema