// Generated by CoffeeScript 1.9.0
var Hash,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

Hash = (function(_super) {
  __extends(Hash, _super);

  function Hash(object, restrict_keys) {
    if (object == null) {
      object = {};
    }
    if (restrict_keys == null) {
      restrict_keys = [];
    }
    Hash.prototype.get = (function(_this) {
      return function(key) {
        return object[key];
      };
    })(this);
    Hash.prototype.set = (function(_this) {
      return function(key, value) {
        var k, v, _i, _len, _results;
        if (typeof key === 'string') {
          if (restrict_keys.length && 0 > restrict_keys.indexOf(key)) {
            return false;
          }
          return object[key] = value;
        } else if (typeof key === 'object') {
          _results = [];
          for (v = _i = 0, _len = key.length; _i < _len; v = ++_i) {
            k = key[v];
            _results.push(_this.set(k, v));
          }
          return _results;
        }
      };
    })(this);
    Hash.prototype.valueOf = (function(_this) {
      return function() {
        return object;
      };
    })(this);
    Hash.prototype.toJSON = (function(_this) {
      return function() {
        return object;
      };
    })(this);
    Hash.prototype.toString = (function(_this) {
      return function(readable) {
        if (readable == null) {
          readable = false;
        }
        return JSON.stringify(_this.toJSON(), null, readable ? 2 : void 0);
      };
    })(this);
  }

  return Hash;

})(Object);

module.exports = Hash;
