// Generated by CoffeeScript 1.9.0
var EventEmitter, Singleton,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

EventEmitter = require('events').EventEmitter;

Singleton = (function(_super) {
  'use strict';
  __extends(Singleton, _super);

  function Singleton() {
    return Singleton.__super__.constructor.apply(this, arguments);
  }

  Singleton.getInstance = function() {
    return this.__instance != null ? this.__instance : this.__instance = new this;
  };

  return Singleton;

})(EventEmitter);

module.exports = Singleton;
