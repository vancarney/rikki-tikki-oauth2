// Generated by CoffeeScript 1.9.0
var Document, Model, RikkiTikkiAPI, Util, _,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

_ = require('underscore')._;

RikkiTikkiAPI = module.parent.exports.RikkiTikkiAPI;

Document = module.parent.exports.Document;

Util = RikkiTikkiAPI.Util;

Model = (function(_super) {
  __extends(Model, _super);

  function Model(doc) {}

  Model.prototype.$where = function() {};

  Model.prototype.Model = function() {};

  Model.prototype.increment = function() {};

  Model.prototype.model = function() {};

  Model.prototype.remove = function() {};

  Model.prototype.save = function() {};

  Model.prototype.aggregate = function() {};

  Model.prototype.count = function() {};

  Model.prototype.create = function() {};

  Model.prototype.discriminator = function() {};

  Model.prototype.distinct = function() {};

  Model.prototype.ensureIndexes = function() {};

  Model.prototype.find = function() {};

  Model.prototype.findById = function() {};

  Model.prototype.findByIdAndRemove = function() {};

  Model.prototype.findByIdAndUpdate = function() {};

  Model.prototype.findOne = function() {};

  Model.prototype.findOneAndRemove = function() {};

  Model.prototype.findOneAndUpdate = function() {};

  Model.prototype.geoNear = function() {};

  Model.prototype.geoSearch = function() {};

  Model.prototype.mapReduce = function() {};

  Model.prototype.populate = function() {};

  Model.prototype.remove = function() {};

  Model.prototype.update = function() {};

  Model.prototype.where = function() {};

  Model.prototype.base = function() {};

  Model.prototype.collection = function() {};

  Model.prototype.db = function() {};

  Model.prototype.discriminators = function() {};

  Model.prototype.modelName = function() {};

  return Model;

})(Document);

module.exports = Model;
