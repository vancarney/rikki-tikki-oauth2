// Generated by CoffeeScript 1.9.0
var ClientLoader, ClientOpts, ClientRenderer, RikkiTikkiAPI, Util, _,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

_ = require('underscore')._;

RikkiTikkiAPI = module.parent.exports.RikkiTikkiAPI;

module.exports.RikkiTikkiAPI = RikkiTikkiAPI;

Util = RikkiTikkiAPI.Util;

ClientOpts = require('../config/ClientOptions');

ClientLoader = require('./ClientLoader');

ClientRenderer = (function(_super) {
  __extends(ClientRenderer, _super);

  function ClientRenderer() {
    var e;
    try {
      new ClientLoader().load((function(_this) {
        return function(e, _at___API) {
          _this.__API = _at___API;
          if (e != null) {
            throw new Error(e);
          }
        };
      })(this));
    } catch (_error) {
      e = _error;
      return console.log(e);
    }
    this.__template = "/*\n * client.js\n * API Client Generated by RikkiTikki\n */\n<%= core_api %>\n(function() {\n  var NS = RikkiTikki.createScope('<%=ns%>');\n  <% for (var key in opts) { %>\n  <% if (opts[key]) { %>NS.<%= key.toUpperCase() %> = <%= typeof opts[key] == 'string' ?  '\"'+opts[key]+'\"' : opts[key] %>;<% } %><% } %>\n}).call(this);";
  }

  ClientRenderer.prototype.toSource = function() {
    var client_opts, ns;
    client_opts = new ClientOpts;
    ns = (ns = client_opts.get('api_namespace')) !== '' ? ns : 'Client';
    return (_.template(this.__template))({
      core_api: this.__API,
      opts: client_opts.valueOf(),
      ns: ns
    });
  };

  return ClientRenderer;

})(Object);

module.exports = ClientRenderer;
