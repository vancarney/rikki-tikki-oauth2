// Generated by CoffeeScript 1.9.0
var ArrayCollection, ModuleManager, RikkiTikkiAPI,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

ArrayCollection = require('js-arraycollection');

RikkiTikkiAPI = module.parent.exports;

ModuleManager = (function(_super) {
  __extends(ModuleManager, _super);

  function ModuleManager() {
    var modules;
    ModuleManager.__super__.constructor.call(this);
    modules = new ArrayCollection([]);
    this.registerModule = (function(_this) {
      return function(name, clazz) {
        var inst;
        modules.addItem({
          name: name,
          _class: clazz,
          instance: (inst = new clazz)
        });
        inst.api = RikkiTikkiAPI;
        return inst.onRegister();
      };
    })(this);
    this.removeModule = (function(_this) {
      return function(name) {
        var k, o, _ref;
        _ref = modules.__list;
        for (k in _ref) {
          o = _ref[k];
          if (o.name === name) {
            modules.removeItemAt(k);
            return o;
          }
        }
        return null;
      };
    })(this);
    this.retrieveModule = function(name) {
      var k, o, _ref;
      _ref = modules.__list;
      for (k in _ref) {
        o = _ref[k];
        if (o.name === name) {
          return o;
        }
      }
    };
  }

  return ModuleManager;

})(RikkiTikkiAPI.base_classes.Singleton);

module.exports = ModuleManager;
