// Generated by CoffeeScript 1.9.0
var RoutingParams,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

RoutingParams = (function(_super) {
  __extends(RoutingParams, _super);

  function RoutingParams(path, operation) {
    if (path) {
      this.setPath(path);
    }
    if (operation) {
      this.setOperation(operation);
    }
  }

  RoutingParams.prototype.setPath = function(_at_path) {
    this.path = _at_path;
    if (!this.path || (this.path.match(/[a-zA-Z]+\/+[a-zA-Z0-9]+\/:?[A-Za-z_0-9]+\/?:?[a-zA-Z0-9]?/)) === null) {
      throw "Path was invalid";
    }
  };

  RoutingParams.prototype.setOperation = function(_at_operation) {
    this.operation = _at_operation;
    switch (this.operation) {
      case 'index':
        return this.method = 'get';
      case 'show':
        return this.method = 'get';
      case 'update':
        return this.method = 'put';
      case 'create':
        return this.method = 'post';
      case 'destroy':
        return this.method = 'delete';
      default:
        delete this.operation;
        throw 'Invalid REST Operation Type';
    }
  };

  return RoutingParams;

})(Object);

module.exports = RoutingParams;
